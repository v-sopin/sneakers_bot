import time
import discord
import aiohttp
import asyncio
from discord.utils import get
from discord.ext import commands
from scripts.parsers import parse
from scripts.db_manager import SearchRequestsDbManager, ItemsShowedDbManager
from scripts.config import TOKEN, GUILD_ID, CHANEL_NAME, DEVELOPER_ID, ADMINS, RESULTS_CATEGORY_NAME

loop = asyncio.get_event_loop()
bot = commands.Bot(command_prefix='$')
PARSER_STARTED = False

bot.loop.create_task(parse(bot))

#loop.run_until_complete(ItemsShowedDbManager.clear(loop))


@bot.command(name='add-to-search')
@commands.has_role('admin')
async def add_search_request(ctx, request=None):
    channel = ctx.message.channel
    request = ctx.message.content[15:]
    guild = ctx.message.guild
    chanel_categories = guild.categories
    category = get(chanel_categories, name=RESULTS_CATEGORY_NAME)

    if request is None:
        await channel.send('''‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–∞–º –∑–∞–ø—Ä–æ—Å –≤ –∫–æ–º–µ–Ω–¥–µ: *$add-to-search **–∑–∞–ø—Ä–æ—Å***''')
        return
    elif len(request) < 6:
        await channel.send('''‚ùå –î–ª–∏–Ω–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 6-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤.''')
        return
    elif await SearchRequestsDbManager.get_by_name(request, loop) is not None:
        await channel.send('''‚ùå –¢–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å —É–∂–µ –µ—Å—Ç—å''')
        return

    new_channel_name = 'üëü-' + request.replace(' ', '-')
    new_channel = await guild.create_text_channel(new_channel_name, category=category)
    await SearchRequestsDbManager.add(request, new_channel.id, loop)
    await channel.send(f'–ó–∞–ø—Ä–æ—Å **{request}** –¥–æ–±–∞–≤–ª–µ–Ω')


@bot.command(name='show-requests')
@commands.has_role('admin')
async def show_requests(ctx, request=None):
    channel = ctx.message.channel

    requests = await SearchRequestsDbManager.get_all(loop)
    if len(requests) == 0:
        text = '–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç.'
    else:
        text = '''**–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã**'''
        for r in requests:
            text += f'''
**{r.id}** - {r.request}'''

    await channel.send(text)


@bot.command(name='delete')
@commands.has_role('admin')
async def delete(ctx, request_id=None):
    channel = ctx.message.channel
    if request_id is None:
        await channel.send('''–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å id –∑–∞–ø—Ä–æ—Å–∞ –≤ –∫–æ–º–µ–Ω–¥–µ: *$adelete **id***''')
        return
    try:
        request_id = int(request_id)
    except ValueError:
        await channel.send('''‚ùå –ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç id''')
        return

    request = await SearchRequestsDbManager.get_by_id(request_id, loop)
    await SearchRequestsDbManager.delete(request_id, loop)
    await channel.send(f'''–ó–∞–ø—Ä–æ—Å **{request.request}** —É–¥–∞–ª–µ–Ω''')

'''
@bot.event
async def on_command_error(ctx, error):
    channel = ctx.message.channel
    if isinstance(error, commands.NoPrivateMessage):
        await channel.send('–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.')
    elif isinstance(error, commands.DisabledCommand):
        await channel.send('–°–æ–∂–∞–ª–µ—é. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞.')
    elif isinstance(error, commands.CheckFailure):
        await channel.send('–°–æ–∂–∞–ª–µ—é. –£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
    elif isinstance(error, commands.CommandNotFound):
        await channel.send("–Ø –Ω–µ –∑–Ω–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É")
'''
bot.run(TOKEN)
